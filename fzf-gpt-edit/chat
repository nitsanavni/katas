#!/bin/bash

CHAT_FILE="$HOME/.chat"

MODEL="gpt-4"
API_URL="https://api.openai.com/v1/chat/completions"

CONTINUE=false

while getopts ":3c" opt; do
  case $opt in
    3)
      MODEL="gpt-3.5-turbo"
      ;;
    c)
      CONTINUE=true
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

USER_MESSAGE="$*"

JSON_SAFE_MESSAGE=$(echo -n "$USER_MESSAGE" | jq -Rs)

if $CONTINUE && [ -s "$CHAT_FILE" ]; then
  OLD_CONVERSATION_JSON=$(<"$CHAT_FILE")
else
  OLD_CONVERSATION_JSON="[]"
fi

OLD_CONVERSATION_JSON=$(echo "$OLD_CONVERSATION_JSON" | jq --arg msg "$USER_MESSAGE" '. + [{"role": "user", "content": $msg}]')

read -r -d '' PAYLOAD <<- EOM
{
   "model": "$MODEL",
   "messages": $OLD_CONVERSATION_JSON
}
EOM

RESPONSE=$(curl -sS "$API_URL" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  --data "$PAYLOAD")

ASSISTANT_MESSAGE=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
echo "$OLD_CONVERSATION_JSON" | jq --arg msg "$ASSISTANT_MESSAGE" '. + [{"role": "assistant", "content": $msg}]' > "$CHAT_FILE"

echo "$RESPONSE" | jq -r '(.choices[0].message.content,.error.message)//empty'